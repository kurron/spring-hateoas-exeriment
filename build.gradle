/*******************************************************************************
 * Copyright year Ronald D. Kurr kurr@kurron.org
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 ******************************************************************************/

apply plugin: 'groovy'
apply plugin: 'project-report'
apply plugin: 'war'
apply plugin: 'application'

ext {
    springFrameworkVersion = '3.2.2.RELEASE'
    springHateoasVersion = '0.5.0.RELEASE'
    groovyVersion = '2.1.3'
    hamcrestVersion = '1.3'
    junitVersion = '4.10'
    logbackVersion = '1.0.12'
    slf4jVersion = '1.7.5'
    spockVersion = '0.7-groovy-2.0'
    tomcatVersion = '7.0.40'
    jacksonVersion = '2.2.1'
    jsonPathVersion = '0.8.1'
}

defaultTasks 'clean', 'projectReport', 'build', 'startScripts', 'installApp', 'distZip', 'distTar'

repositories {
    mavenCentral()
    maven {
        url "http://repo.springsource.org/libs-release"
    }
    maven {
        url "http://repo.springsource.org/libs-milestone"
    }
    maven {
        url "http://repo.springsource.org/libs-snapshot"
    }
}

configurations {
    all*.exclude group: 'commons-logging'
    all*.exclude group: 'log4j'
    all*.exclude group: 'slf4j'
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}:indy"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-ext:${slf4jVersion}"
    compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
    compile "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    compile "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
    compile "org.apache.tomcat:tomcat-jasper:${tomcatVersion}"
    compile "org.apache.tomcat:tomcat-jasper-el:${tomcatVersion}"
    compile "org.apache.tomcat:tomcat-jsp-api:${tomcatVersion}"
    compile "org.springframework:spring-webmvc:${springFrameworkVersion}"
    compile "org.springframework.hateoas:spring-hateoas:${springHateoasVersion}"

    runtime "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    runtime "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
    runtime "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    runtime "com.jayway.jsonpath:json-path:${jsonPathVersion}"

    testCompile( "junit:junit-dep:${junitVersion}" ) {
        exclude module: 'hamcrest-core'
    }
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testCompile( "org.spockframework:spock-core:${spockVersion}" ) {
        exclude module: 'groovy-all'
        exclude module: 'hamcrest-core'
    }
}

mainClassName = "org.kurron.tomcat.embed.Launcher"
applicationDistribution.from( 'src/main/webapp' ) {
    into 'src/main/webapp'
}

war {
    classpath = classpath.filter { file -> ! file.name.startsWith( 'tomcat' ) && ! file.name.startsWith( 'ecj' ) }
}

task generateWrapper( type: Wrapper ) {
    gradleVersion = '1.6'
}
